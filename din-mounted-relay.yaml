esphome:
  on_boot:
    # https://esphome.io/components/esphome.html#on-boot after 600 switches are restored
    priority: 600
    then:
      if:
        condition: 
          - switch.is_on: relay_inner
        then:
          - switch.turn_on: relay
  name: din-mounted-relay
  friendly_name: din_mounted_relay

packages:
  basic: !include
    file: includes/basic.yaml
    vars:
      # secrets don't support substitution
      # CHANGE THIS TO THE NAME OF THE DEVICE!!!
      <<: !secret din_mounted_relay_params
      ap_ssid: Din-Mounted-Relay

bk72xx:
  board: generic-bk7231t-qfn32-tuya

captive_portal:

web_server:

sensor:
- platform: debug
  free:
    name: "Heap Free"
    entity_category: diagnostic
  block:
    name: "Heap Max Block"
    entity_category: diagnostic
  loop_time:
    name: "Loop Time"
    entity_category: diagnostic

text_sensor:
- platform: libretiny
  version:
    name: LibreTiny Version
    entity_category: diagnostic
- platform: debug
  device:
    name: "Device Info"
    entity_category: diagnostic
  reset_reason:
    name: "Reset Reason"
    entity_category: diagnostic

debug:
  update_interval: 5s

button:
- platform: restart
  name: Restart
  entity_category: diagnostic

status_led:
  pin:
    number: P1
    inverted: true

binary_sensor:
- platform: gpio
  name: Button
  pin:
    number: P26
    inverted: true
    mode: INPUT_PULLUP
  on_press:
    then:
      - switch.toggle: relay

- platform: template
  id: energy_saving_overwritten
  name: Energy saving overwritten

globals:
- id: setting_up_energy_saving
  type: bool
  restore_value: no
  initial_value: "false"
- id: setting_up_load_shedding
  type: bool
  restore_value: no
  initial_value: "false"

script:
- id: energy_saving_overwrite
  then:
    - lambda: |-
        id(energy_saving_overwritten).publish_state(
          id(energy_saving).state && !id(setting_up_energy_saving));
        id(setting_up_energy_saving) = false;

switch:
- platform: gpio
  id: relay_inner
  internal: True
  pin: P14
  restore_mode: RESTORE_DEFAULT_OFF
  on_turn_off:
    then:
      - script.execute: energy_saving_overwrite
      - script.wait: energy_saving_overwrite
  on_turn_on:
    then:
      - script.execute: energy_saving_overwrite
      - script.wait: energy_saving_overwrite

- platform: template
  id: relay
  name: Relay
  turn_on_action:
  - lambda: |-
      if (!id(load_shed).state || (id(setting_up_load_shedding) && id(turn_on_after_shedding).state)) {
        id(relay_inner).turn_on();
        id(turn_on_after_shedding).turn_on();
        id(relay).publish_state(true);
      } else {
        id(relay_inner).turn_off();
        id(relay).publish_state(false);
      }
  turn_off_action:
  - lambda: |-
      id(relay_inner).turn_off();
      if (!id(setting_up_load_shedding)) {
        id(turn_on_after_shedding).turn_off();
      }
      id(relay).publish_state(false);

- platform: template
  id: load_shed
  name: Load shed
  optimistic: True
  turn_on_action:
  - lambda: |-
      id(setting_up_load_shedding) = true;
      id(relay).turn_off();
      id(setting_up_load_shedding) = false;
  turn_off_action:
  - lambda: |-
      id(setting_up_load_shedding) = true;
      id(relay).turn_on();
      id(setting_up_load_shedding) = false;

- platform: template
  id: turn_on_after_shedding
  name: Turn back on after shedding
  optimistic: True
  restore_mode: RESTORE_DEFAULT_OFF

- platform: template
  id: energy_saving
  name: Energy saving
  optimistic: True
  turn_off_action:
    then:
    - lambda: |-
        if (!id(energy_saving_overwritten).state) {
          id(setting_up_energy_saving) = true;
          id(relay).turn_on();
        }
        id(energy_saving_overwritten).publish_state(false);
            
  turn_on_action: 
    then:
    - lambda: |-
        if (id(relay).state == false /* if relay is off */) {
          id(energy_saving_overwritten).publish_state(true);
        } else {
          id(setting_up_energy_saving) = true;
          id(relay).turn_off();
        }
