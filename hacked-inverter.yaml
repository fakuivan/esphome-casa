esphome:
  name: hacked-inverter
  friendly_name: hacked_inverter

packages:
  basic: !include
    file: includes/basic.yaml
    vars:
      # secrets don't support substitution
      # CHANGE THIS TO THE NAME OF THE DEVICE!!!
      <<: !secret hacked_inverter_params
      ap_ssid: Hacked-Inverter

esp8266:
  board: esp01_1m

button:
- platform: restart
  name: Restart
  entity_category: diagnostic

sensor:
- platform: pipsolar
  pipsolar_id: inverter0
  ac_output_apparent_power:
    name: Output apparent power
    state_class: measurement
  ac_output_active_power:
    name: Output active power
    state_class: measurement
  output_load_percent:
    name: Output load percent
    state_class: measurement
  bus_voltage:
    name: DC bus voltage
    state_class: measurement
  battery_voltage:
    id: battery_voltage
    name: Battery voltage
    state_class: measurement
  inverter_heat_sink_temperature:
    name: Heat sink temperature
    state_class: measurement
  pv_input_voltage:
    name: PV input voltage
    state_class: measurement
  pv_charging_power:
    name: PV power
    id: pv_power
    state_class: measurement
  battery_charging_current:
    name: Battery charging current
    state_class: measurement
    on_value: 
      then:
        sensor.template.publish:
          id: batt_charge_power
          state: !lambda return x*id(battery_voltage).state;
  battery_discharge_current:
    name: Battery discharging current
    state_class: measurement
    on_value: 
      then:
        sensor.template.publish:
          id: batt_discharge_power
          state: !lambda return x*id(battery_voltage).state;

- platform: template
  name: Battery discharging power
  id: batt_discharge_power
  state_class: measurement
  device_class: power
  unit_of_measurement: W

- platform: template
  name: Battery charging power
  id: batt_charge_power
  state_class: measurement
  device_class: power
  unit_of_measurement: W

- platform: integration
  name: Battery charge energy
  sensor: batt_charge_power
  time_unit: h
  state_class: total_increasing
  device_class: energy

- platform: integration
  name: Battery discharge energy
  sensor: batt_discharge_power
  time_unit: h
  state_class: total_increasing
  device_class: energy

- platform: integration
  name: PV energy
  sensor: pv_power
  time_unit: h
  state_class: total_increasing
  device_class: energy

binary_sensor:
- platform: pipsolar
  pipsolar_id: inverter0
  faults_present:
    name: Faults present
    device_class: problem
  warnings_present:
    name: Warnings present
    device_class: problem
  warning_line_fail:
    name: Line failed warning
    device_class: problem
  warning_power_loss:
    name: Power loss warning
    device_class: problem
  warning_over_load:
    name: Overload warning
    device_class: problem
  warning_power_limit:
    name: Power limit warning
    device_class: problem

# Use dofferent UART since UART0 is being used by the inverter
logger:
  # UART1 can only send message, RX is disabled
  hardware_uart: UART1

uart:
- id: uart_bus
  tx_pin: GPIO1
  rx_pin: GPIO3
  baud_rate: 2400

pipsolar:
- uart_id: uart_bus
  id: inverter0
